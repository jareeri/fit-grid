{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import AOS from 'aos';\n// import 'aos/dist/aos.css';\n\n// const Calculator = () => {\n//   const [gender, setGender] = useState('');\n//   const [height, setHeight] = useState('');\n//   const [weight, setWeight] = useState('');\n//   const [bmiResult, setBmiResult] = useState(null);\n//   const [status, setStatus] = useState('');\n//   const [error, setError] = useState('');\n//   const [showResult, setShowResult] = useState(false);\n\n//   useEffect(() => {\n//     AOS.init();\n//   }, []);\n\n//   const tableItems = [\n//     { name: '18-25', email: 'Normal Weight' },\n//     { name: '25-30', email: 'Overweight' },\n//     { name: '30-40', email: 'Obesity' },\n//     { name: '40-above', email: 'Morbid Obesity' },\n//   ];\n\n//   const calculateBMI = () => {\n//     const numericHeight = parseFloat(height);\n//     const numericWeight = parseFloat(weight);\n\n//     if (isNaN(numericHeight) || isNaN(numericWeight) || numericHeight <= 0 || numericWeight <= 0) {\n//       setError('Please enter valid positive values for height and weight.');\n//       return;\n//     }\n\n//     setError('');\n\n//     const bmi = (numericWeight / ((numericHeight / 100) ** 2)).toFixed(2);\n//     setBmiResult(bmi);\n\n//     const bmiStatus = getStatus(bmi);\n//     setStatus(bmiStatus);\n\n//     setShowResult(true);\n//   };\n\n//   const getStatus = (bmi) => {\n//     if (bmi < 18.5) return 'Underweight';\n//     else if (bmi >= 18.5 && bmi < 25) return 'Normal Weight';\n//     else if (bmi >= 25 && bmi < 30) return 'Overweight';\n//     else if (bmi >= 30 && bmi < 40) return 'Obesity';\n//     else return 'Morbid Obesity';\n//   };\n\n//   const resetCalculator = () => {\n//     setGender('');\n//     setHeight('');\n//     setWeight('');\n//     setBmiResult(null);\n//     setStatus('');\n//     setError('');\n//     setShowResult(false);\n//   };\n\n//   return (\n//     <section data-aos=\"fade-up\" className=\"calculator-section bg-black py-12 text-white\">\n//       <div className=\"container mx-auto flex flex-wrap items-center justify-between\">\n//         <div className=\"w-full md:w-1/2 md:pr-8 mb-8 md:mb-0\">\n//           <h1 className=\"text-4xl font-bold mb-6 text-center md:text-left\">BMI CALCULATOR</h1>\n//           <div className=\"flex flex-col md:flex-row md:space-x-4 mb-4\">\n//             <div className=\"mb-4 md:w-1/2\">\n//               <label className=\"block text-sm font-bold mb-2\" htmlFor=\"height\">\n//                 Height (cm)\n//               </label>\n//               <input\n//                 className=\"input-field w-full px-4 py-2 border rounded-md focus:outline-none focus:border-red-500\"\n//                 id=\"height\"\n//                 type=\"number\"\n//                 placeholder=\"e.g., 169\"\n//                 value={height}\n//                 onChange={(e) => setHeight(e.target.value)}\n//               />\n//             </div>\n//             <div className=\"mb-4 md:w-1/2\">\n//               <label className=\"block text-sm font-bold mb-2\" htmlFor=\"weight\">\n//                 Weight (kg)\n//               </label>\n//               <input\n//                 className=\"input-field w-full px-4 py-2 border rounded-md focus:outline-none focus:border-red-500\"\n//                 id=\"weight\"\n//                 type=\"number\"\n//                 placeholder=\"e.g., 68\"\n//                 value={weight}\n//                 onChange={(e) => setWeight(e.target.value)}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"flex justify-center md:justify-start mb-6\">\n//             <button\n//               className=\"p-3 bg-gradient-to-r rounded-xl bg-red-700 hover:bg-black transition-all duration-300 text-white mr-4\"\n//               type=\"button\"\n//               onClick={calculateBMI}\n//             >\n//               CALCULATE IT\n//             </button>\n//             <button\n//               className=\"p-3 bg-gradient-to-r rounded-xl bg-red-700 hover:bg-black transition-all duration-300 text-white\"\n//               type=\"button\"\n//               onClick={resetCalculator}\n//             >\n//               RESET IT\n//             </button>\n//           </div>\n//           {showResult && bmiResult !== null && (\n//             <div className=\"result-container text-center text-gray-800\">\n//               <p className=\"mb-2\">\n//                 Your BMI is <span className=\"font-bold\">{bmiResult}</span>.\n//               </p>\n//               <p>\n//                 You are <span className=\"font-bold\">{status}</span>.\n//               </p>\n//             </div>\n//           )}\n//         </div>\n//         <div className=\"w-full md:w-1/2 md:pl-8\">\n//           <h3 className=\"text-2xl font-bold text-center md:text-left mb-4\">BODY MASS INDEX</h3>\n//           <div className=\"shadow-sm border rounded-lg overflow-x-auto\">\n//             <table className=\"w-full table-auto text-sm text-center bg-white\">\n//               <thead className=\"bg-red-700 text-white font-medium border-b\">\n//                 <tr>\n//                   <th className=\"py-2 px-4\">BMI</th>\n//                   <th className=\"py-2 px-4\">CLASSIFICATION</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"text-black divide-y\">\n//                 {tableItems.map((item, idx) => (\n//                   <tr key={idx} className=\"divide-x\">\n//                     <td className=\"px-4 py-2\">{item.name}</td>\n//                     <td className=\"px-4 py-2\">{item.email}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Calculator;\n\n// import React, { useState, useEffect } from 'react';\n// import AOS from 'aos';\n// import 'aos/dist/aos.css';\n\n// const Calculator = () => {\n//   const [height, setHeight] = useState('');\n//   const [weight, setWeight] = useState('');\n//   const [bmiResult, setBmiResult] = useState(null);\n//   const [status, setStatus] = useState('');\n//   const [error, setError] = useState('');\n//   const [showResult, setShowResult] = useState(false);\n\n//   useEffect(() => {\n//     AOS.init();\n//   }, []);\n\n//   const tableItems = [\n//     { name: '18-25', email: 'Normal Weight' },\n//     { name: '25-30', email: 'Overweight' },\n//     { name: '30-40', email: 'Obesity' },\n//     { name: '40-above', email: 'Morbid Obesity' },\n//   ];\n\n//   const calculateBMI = () => {\n//     const numericHeight = parseFloat(height);\n//     const numericWeight = parseFloat(weight);\n\n//     if (isNaN(numericHeight) || isNaN(numericWeight) || numericHeight <= 0 || numericWeight <= 0) {\n//       setError('Please enter valid positive values for height and weight.');\n//       return;\n//     }\n\n//     setError('');\n\n//     const bmi = (numericWeight / ((numericHeight / 100) ** 2)).toFixed(2);\n//     setBmiResult(bmi);\n\n//     const bmiStatus = getStatus(bmi);\n//     setStatus(bmiStatus);\n\n//     setShowResult(true);\n//   };\n\n//   const getStatus = (bmi) => {\n//     if (bmi < 18.5) return 'Underweight';\n//     else if (bmi >= 18.5 && bmi < 25) return 'Normal Weight';\n//     else if (bmi >= 25 && bmi < 30) return 'Overweight';\n//     else if (bmi >= 30 && bmi < 40) return 'Obesity';\n//     else return 'Morbid Obesity';\n//   };\n\n//   return (\n//     <section data-aos=\"fade-up\" className=\"calculator-section flex items-center justify-center min-h-screen bg-black\">\n//       <div className=\"container w-10/12 mx-auto p-8 bg-black shadow-lg rounded-lg flex flex-col items-center justify-center\">\n//         <h1 className=\"text-3xl font-bold mb-6 text-center text-white\">BMI CALCULATOR</h1>\n//         <form className=\"bg-white p-6 rounded-md w-10/12\">\n//           {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-bold mb-2\" htmlFor=\"height\">\n//               Height (cm)\n//             </label>\n//             <input\n//               className=\"input-field w-full bg-[#f5f5f5]\"\n//               id=\"height\"\n//               type=\"number\"\n//               placeholder=\"e.g., 169\"\n//               value={height}\n//               onChange={(e) => setHeight(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"mb-6\">\n//             <label className=\"block text-sm font-bold mb-2\" htmlFor=\"weight\">\n//               Weight (kg)\n//             </label>\n//             <input\n//               className=\"input-field w-full bg-[#f5f5f5]\"\n//               id=\"weight\"\n//               type=\"number\"\n//               placeholder=\"e.g., 68\"\n//               value={weight}\n//               onChange={(e) => setWeight(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"flex justify-center\">\n//             <button\n//               className=\"p-3 bg-gradient-to-r  rounded-xl mt-2 hover:bg-black bg-red-700 transition-all duration-300 text-white\"\n//               type=\"button\"\n//               onClick={calculateBMI}\n//             >\n//               Calculate\n//             </button>\n//           </div>\n//           {showResult && bmiResult !== null && (\n//             <div className=\"result-container mt-5 text-center text-gray-800\">\n//               <p className=\"mb-2\">\n//                 Your BMI is <span className=\"font-bold\">{bmiResult}</span>.\n//               </p>\n//               <p>\n//                 You are <span className=\"font-bold\">{status}</span>.\n//               </p>\n//             </div>\n//           )}\n//         </form>\n//         <div className=\"mt-8 w-8/12\">\n//           <h3 className=\"text-xl font-bold text-white mb-4 text-center\">BODY MASS INDEX</h3>\n//           <div className=\"shadow-sm border rounded-lg overflow-x-auto\">\n//             <table className=\"w-full table-auto text-sm text-left\">\n//               <thead className=\"bg-red-700 text-black font-medium border-b\">\n//                 <tr>\n//                   <th className=\"py-2 px-4 text-center\">BMI</th>\n//                   <th className=\"py-2 px-4 text-center\">CLASSIFICATION</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"text-black bg-white divide-y\">\n//                 {tableItems.map((item, idx) => (\n//                   <tr key={idx} className=\"divide-x\">\n//                     <td className=\"px-4 py-2 text-center\">{item.name}</td>\n//                     <td className=\"px-4 py-2 text-center\">{item.email}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Calculator;","map":{"version":3,"names":[],"sources":["C:/Users/Orange/Desktop/fit-grid/client/src/Pages/Calculator.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import AOS from 'aos';\n// import 'aos/dist/aos.css';\n\n// const Calculator = () => {\n//   const [gender, setGender] = useState('');\n//   const [height, setHeight] = useState('');\n//   const [weight, setWeight] = useState('');\n//   const [bmiResult, setBmiResult] = useState(null);\n//   const [status, setStatus] = useState('');\n//   const [error, setError] = useState('');\n//   const [showResult, setShowResult] = useState(false);\n\n//   useEffect(() => {\n//     AOS.init();\n//   }, []);\n\n//   const tableItems = [\n//     { name: '18-25', email: 'Normal Weight' },\n//     { name: '25-30', email: 'Overweight' },\n//     { name: '30-40', email: 'Obesity' },\n//     { name: '40-above', email: 'Morbid Obesity' },\n//   ];\n\n//   const calculateBMI = () => {\n//     const numericHeight = parseFloat(height);\n//     const numericWeight = parseFloat(weight);\n\n//     if (isNaN(numericHeight) || isNaN(numericWeight) || numericHeight <= 0 || numericWeight <= 0) {\n//       setError('Please enter valid positive values for height and weight.');\n//       return;\n//     }\n\n//     setError('');\n\n//     const bmi = (numericWeight / ((numericHeight / 100) ** 2)).toFixed(2);\n//     setBmiResult(bmi);\n\n//     const bmiStatus = getStatus(bmi);\n//     setStatus(bmiStatus);\n\n//     setShowResult(true);\n//   };\n\n//   const getStatus = (bmi) => {\n//     if (bmi < 18.5) return 'Underweight';\n//     else if (bmi >= 18.5 && bmi < 25) return 'Normal Weight';\n//     else if (bmi >= 25 && bmi < 30) return 'Overweight';\n//     else if (bmi >= 30 && bmi < 40) return 'Obesity';\n//     else return 'Morbid Obesity';\n//   };\n\n//   const resetCalculator = () => {\n//     setGender('');\n//     setHeight('');\n//     setWeight('');\n//     setBmiResult(null);\n//     setStatus('');\n//     setError('');\n//     setShowResult(false);\n//   };\n\n//   return (\n//     <section data-aos=\"fade-up\" className=\"calculator-section bg-black py-12 text-white\">\n//       <div className=\"container mx-auto flex flex-wrap items-center justify-between\">\n//         <div className=\"w-full md:w-1/2 md:pr-8 mb-8 md:mb-0\">\n//           <h1 className=\"text-4xl font-bold mb-6 text-center md:text-left\">BMI CALCULATOR</h1>\n//           <div className=\"flex flex-col md:flex-row md:space-x-4 mb-4\">\n//             <div className=\"mb-4 md:w-1/2\">\n//               <label className=\"block text-sm font-bold mb-2\" htmlFor=\"height\">\n//                 Height (cm)\n//               </label>\n//               <input\n//                 className=\"input-field w-full px-4 py-2 border rounded-md focus:outline-none focus:border-red-500\"\n//                 id=\"height\"\n//                 type=\"number\"\n//                 placeholder=\"e.g., 169\"\n//                 value={height}\n//                 onChange={(e) => setHeight(e.target.value)}\n//               />\n//             </div>\n//             <div className=\"mb-4 md:w-1/2\">\n//               <label className=\"block text-sm font-bold mb-2\" htmlFor=\"weight\">\n//                 Weight (kg)\n//               </label>\n//               <input\n//                 className=\"input-field w-full px-4 py-2 border rounded-md focus:outline-none focus:border-red-500\"\n//                 id=\"weight\"\n//                 type=\"number\"\n//                 placeholder=\"e.g., 68\"\n//                 value={weight}\n//                 onChange={(e) => setWeight(e.target.value)}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"flex justify-center md:justify-start mb-6\">\n//             <button\n//               className=\"p-3 bg-gradient-to-r rounded-xl bg-red-700 hover:bg-black transition-all duration-300 text-white mr-4\"\n//               type=\"button\"\n//               onClick={calculateBMI}\n//             >\n//               CALCULATE IT\n//             </button>\n//             <button\n//               className=\"p-3 bg-gradient-to-r rounded-xl bg-red-700 hover:bg-black transition-all duration-300 text-white\"\n//               type=\"button\"\n//               onClick={resetCalculator}\n//             >\n//               RESET IT\n//             </button>\n//           </div>\n//           {showResult && bmiResult !== null && (\n//             <div className=\"result-container text-center text-gray-800\">\n//               <p className=\"mb-2\">\n//                 Your BMI is <span className=\"font-bold\">{bmiResult}</span>.\n//               </p>\n//               <p>\n//                 You are <span className=\"font-bold\">{status}</span>.\n//               </p>\n//             </div>\n//           )}\n//         </div>\n//         <div className=\"w-full md:w-1/2 md:pl-8\">\n//           <h3 className=\"text-2xl font-bold text-center md:text-left mb-4\">BODY MASS INDEX</h3>\n//           <div className=\"shadow-sm border rounded-lg overflow-x-auto\">\n//             <table className=\"w-full table-auto text-sm text-center bg-white\">\n//               <thead className=\"bg-red-700 text-white font-medium border-b\">\n//                 <tr>\n//                   <th className=\"py-2 px-4\">BMI</th>\n//                   <th className=\"py-2 px-4\">CLASSIFICATION</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"text-black divide-y\">\n//                 {tableItems.map((item, idx) => (\n//                   <tr key={idx} className=\"divide-x\">\n//                     <td className=\"px-4 py-2\">{item.name}</td>\n//                     <td className=\"px-4 py-2\">{item.email}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Calculator;\n\n\n// import React, { useState, useEffect } from 'react';\n// import AOS from 'aos';\n// import 'aos/dist/aos.css';\n\n// const Calculator = () => {\n//   const [height, setHeight] = useState('');\n//   const [weight, setWeight] = useState('');\n//   const [bmiResult, setBmiResult] = useState(null);\n//   const [status, setStatus] = useState('');\n//   const [error, setError] = useState('');\n//   const [showResult, setShowResult] = useState(false);\n\n//   useEffect(() => {\n//     AOS.init();\n//   }, []);\n\n//   const tableItems = [\n//     { name: '18-25', email: 'Normal Weight' },\n//     { name: '25-30', email: 'Overweight' },\n//     { name: '30-40', email: 'Obesity' },\n//     { name: '40-above', email: 'Morbid Obesity' },\n//   ];\n\n//   const calculateBMI = () => {\n//     const numericHeight = parseFloat(height);\n//     const numericWeight = parseFloat(weight);\n\n//     if (isNaN(numericHeight) || isNaN(numericWeight) || numericHeight <= 0 || numericWeight <= 0) {\n//       setError('Please enter valid positive values for height and weight.');\n//       return;\n//     }\n\n//     setError('');\n\n//     const bmi = (numericWeight / ((numericHeight / 100) ** 2)).toFixed(2);\n//     setBmiResult(bmi);\n\n//     const bmiStatus = getStatus(bmi);\n//     setStatus(bmiStatus);\n\n//     setShowResult(true);\n//   };\n\n//   const getStatus = (bmi) => {\n//     if (bmi < 18.5) return 'Underweight';\n//     else if (bmi >= 18.5 && bmi < 25) return 'Normal Weight';\n//     else if (bmi >= 25 && bmi < 30) return 'Overweight';\n//     else if (bmi >= 30 && bmi < 40) return 'Obesity';\n//     else return 'Morbid Obesity';\n//   };\n\n//   return (\n//     <section data-aos=\"fade-up\" className=\"calculator-section flex items-center justify-center min-h-screen bg-black\">\n//       <div className=\"container w-10/12 mx-auto p-8 bg-black shadow-lg rounded-lg flex flex-col items-center justify-center\">\n//         <h1 className=\"text-3xl font-bold mb-6 text-center text-white\">BMI CALCULATOR</h1>\n//         <form className=\"bg-white p-6 rounded-md w-10/12\">\n//           {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n//           <div className=\"mb-4\">\n//             <label className=\"block text-sm font-bold mb-2\" htmlFor=\"height\">\n//               Height (cm)\n//             </label>\n//             <input\n//               className=\"input-field w-full bg-[#f5f5f5]\"\n//               id=\"height\"\n//               type=\"number\"\n//               placeholder=\"e.g., 169\"\n//               value={height}\n//               onChange={(e) => setHeight(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"mb-6\">\n//             <label className=\"block text-sm font-bold mb-2\" htmlFor=\"weight\">\n//               Weight (kg)\n//             </label>\n//             <input\n//               className=\"input-field w-full bg-[#f5f5f5]\"\n//               id=\"weight\"\n//               type=\"number\"\n//               placeholder=\"e.g., 68\"\n//               value={weight}\n//               onChange={(e) => setWeight(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"flex justify-center\">\n//             <button\n//               className=\"p-3 bg-gradient-to-r  rounded-xl mt-2 hover:bg-black bg-red-700 transition-all duration-300 text-white\"\n//               type=\"button\"\n//               onClick={calculateBMI}\n//             >\n//               Calculate\n//             </button>\n//           </div>\n//           {showResult && bmiResult !== null && (\n//             <div className=\"result-container mt-5 text-center text-gray-800\">\n//               <p className=\"mb-2\">\n//                 Your BMI is <span className=\"font-bold\">{bmiResult}</span>.\n//               </p>\n//               <p>\n//                 You are <span className=\"font-bold\">{status}</span>.\n//               </p>\n//             </div>\n//           )}\n//         </form>\n//         <div className=\"mt-8 w-8/12\">\n//           <h3 className=\"text-xl font-bold text-white mb-4 text-center\">BODY MASS INDEX</h3>\n//           <div className=\"shadow-sm border rounded-lg overflow-x-auto\">\n//             <table className=\"w-full table-auto text-sm text-left\">\n//               <thead className=\"bg-red-700 text-black font-medium border-b\">\n//                 <tr>\n//                   <th className=\"py-2 px-4 text-center\">BMI</th>\n//                   <th className=\"py-2 px-4 text-center\">CLASSIFICATION</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"text-black bg-white divide-y\">\n//                 {tableItems.map((item, idx) => (\n//                   <tr key={idx} className=\"divide-x\">\n//                     <td className=\"px-4 py-2 text-center\">{item.name}</td>\n//                     <td className=\"px-4 py-2 text-center\">{item.email}</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Calculator;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}