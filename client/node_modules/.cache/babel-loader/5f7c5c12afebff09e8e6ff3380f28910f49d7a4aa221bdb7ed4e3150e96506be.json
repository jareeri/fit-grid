{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\fit-grid\\\\client\\\\src\\\\Components\\\\CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ElementsConsumer, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CardSection from \"./CardSection\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckoutForm({\n  stripe,\n  elements\n}) {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    planId\n  } = location.search ? Object.fromEntries(new URLSearchParams(location.search)) : {};\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [trainerId, setTrainer] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [subscriptionError, setSubscriptionError] = useState(false);\n  useEffect(() => {\n    const fetchPlanDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/getplanbyid/${planId}`);\n        const {\n          name,\n          price,\n          user_id,\n          duration\n        } = response.data;\n        setName(name);\n        setPrice(price);\n        setTrainer(user_id);\n        setDuration(duration);\n      } catch (error) {\n        console.error(\"Error fetching plan details:\", error);\n        // Handle the error appropriately\n      }\n    };\n\n    if (planId) {\n      fetchPlanDetails();\n    }\n  }, [planId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n\n    // Validate the form fields\n    if (!validateForm()) {\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      setErrorMessage(error.message);\n      setSuccessMessage(\"\"); // Clear success message if there was an error\n      setSubscriptionError(false); // Clear subscription error\n    } else {\n      // Continue with the rest of your code\n      setErrorMessage(\"\"); // Clear any previous error message\n\n      // Handle amount\n      if (paymentMethod) {\n        const {\n          id\n        } = paymentMethod;\n\n        // Pass the price to the backend\n        try {\n          const response = await axios.post(\"http://localhost:8080/payment\", {\n            amount: price * 100,\n            // Assuming price is in dollars, convert to cents\n            id,\n            plan_id: planId,\n            trainer_id: trainerId,\n            months: duration\n          });\n          // console.log(\"response\",response);\n          if (response.data.success) {\n            setSuccessMessage(\"Payment successful!\"); // Set success message\n\n            // Redirect to the home page after successful payment\n            navigate('/'); // You can replace '/' with the actual home page path\n          } else {\n            if (response.data.message === \"User already has an active subscription\") {\n              setSubscriptionError(true); // Set subscription error\n            } else {\n              console.log(\"Payment failed:\", response.data.message);\n              // Handle other failure cases appropriately\n            }\n          }\n        } catch (error) {\n          console.error(\"Error during payment:\", error);\n          setErrorMessage(\"An error occurred during payment. Please try again.\");\n          setSuccessMessage(\"\");\n          setSubscriptionError(false);\n        }\n      } else {\n        console.log(\"Payment method is undefined\");\n        // Handle undefined paymentMethod\n      }\n    }\n  };\n\n  // Basic form validation function\n  const validateForm = () => {\n    // You can add more sophisticated validation as needed\n    const cardElement = elements.getElement(CardElement);\n    if (!cardElement) {\n      setErrorMessage(\"Please enter card information\");\n      return false;\n    }\n    setErrorMessage(\"\");\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"product-title text-center\",\n        children: `Plan : ${name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"product-price text-center\",\n        children: `Price : $${price}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-pay p-3 h-8 bg-gradient-to-r bg-red-700 text-white rounded-xl hover:bg-black transition-all duration-300 my-4 mt-12 flex items-center justify-center\",\n          children: \"Buy Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mt-2\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-green-500 mt-2\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 26\n    }, this), subscriptionError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-message\",\n      children: \"User already has an active subscription. Please check your subscription status.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"vyuhyY9ef94o7il86LlhgQxLKDA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","useEffect","ElementsConsumer","CardElement","useStripe","useElements","CardSection","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","CheckoutForm","stripe","elements","_s","location","navigate","planId","search","Object","fromEntries","URLSearchParams","name","setName","price","setPrice","trainerId","setTrainer","duration","setDuration","errorMessage","setErrorMessage","successMessage","setSuccessMessage","subscriptionError","setSubscriptionError","fetchPlanDetails","response","get","user_id","data","error","console","handleSubmit","event","preventDefault","validateForm","paymentMethod","createPaymentMethod","type","card","getElement","message","id","post","amount","plan_id","trainer_id","months","success","log","cardElement","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/fit-grid/client/src/Components/CheckoutForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ElementsConsumer, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CardSection from \"./CardSection\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction CheckoutForm({ stripe, elements }) {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { planId } = location.search\r\n    ? Object.fromEntries(new URLSearchParams(location.search))\r\n    : {};\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [trainerId, setTrainer] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [subscriptionError, setSubscriptionError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPlanDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/getplanbyid/${planId}`);\r\n        const { name, price, user_id, duration } = response.data;\r\n\r\n        setName(name);\r\n        setPrice(price);\r\n        setTrainer(user_id);\r\n        setDuration(duration);\r\n      } catch (error) {\r\n        console.error(\"Error fetching plan details:\", error);\r\n        // Handle the error appropriately\r\n      }\r\n    };\r\n\r\n    if (planId) {\r\n      fetchPlanDetails();\r\n    }\r\n  }, [planId]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    // Validate the form fields\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (error) {\r\n      setErrorMessage(error.message);\r\n      setSuccessMessage(\"\"); // Clear success message if there was an error\r\n      setSubscriptionError(false); // Clear subscription error\r\n    } else {\r\n      // Continue with the rest of your code\r\n      setErrorMessage(\"\"); // Clear any previous error message\r\n\r\n      // Handle amount\r\n      if (paymentMethod) {\r\n        const { id } = paymentMethod;\r\n\r\n        // Pass the price to the backend\r\n        try {\r\n          const response = await axios.post(\"http://localhost:8080/payment\", {\r\n            amount: price * 100, // Assuming price is in dollars, convert to cents\r\n            id,\r\n            plan_id: planId,\r\n            trainer_id: trainerId,\r\n            months: duration, \r\n          });\r\n          // console.log(\"response\",response);\r\n          if (response.data.success) {\r\n            setSuccessMessage(\"Payment successful!\"); // Set success message\r\n\r\n            // Redirect to the home page after successful payment\r\n            navigate('/'); // You can replace '/' with the actual home page path\r\n          } else {\r\n            if (response.data.message === \"User already has an active subscription\") {\r\n              setSubscriptionError(true); // Set subscription error\r\n            } else {\r\n              console.log(\"Payment failed:\", response.data.message);\r\n              // Handle other failure cases appropriately\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error during payment:\", error);\r\n          setErrorMessage(\"An error occurred during payment. Please try again.\");\r\n          setSuccessMessage(\"\");\r\n          setSubscriptionError(false);\r\n        }\r\n      } else {\r\n        console.log(\"Payment method is undefined\");\r\n        // Handle undefined paymentMethod\r\n      }\r\n    }\r\n  };\r\n\r\n  // Basic form validation function\r\n  const validateForm = () => {\r\n    // You can add more sophisticated validation as needed\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    if (!cardElement) {\r\n      setErrorMessage(\"Please enter card information\");\r\n      return false;\r\n    }\r\n\r\n    setErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"product-info\">\r\n        <h3 className=\"product-title text-center\">{`Plan : ${name}`}</h3>\r\n        <h4 className=\"product-price text-center\">{`Price : $${price}`}</h4>\r\n      </div>\r\n     \r\n      <form onSubmit={handleSubmit}>\r\n        <CardSection />\r\n        <div className=\"flex justify-center\">\r\n        <button\r\n  className=\"btn-pay p-3 h-8 bg-gradient-to-r bg-red-700 text-white rounded-xl hover:bg-black transition-all duration-300 my-4 mt-12 flex items-center justify-center\"\r\n>\r\n  Buy Now\r\n</button>\r\n\r\n        </div>\r\n      </form>\r\n   \r\n      {errorMessage && <div className=\"text-red-500 mt-2\">{errorMessage}</div>}\r\n      {successMessage && <div className=\"text-green-500 mt-2\">{successMessage}</div>}\r\n      {subscriptionError && (\r\n        <div className=\"popup-message\">\r\n          User already has an active subscription. Please check your subscription status.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}